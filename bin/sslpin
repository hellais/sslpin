#!/usr/bin/env python

import sys

from sslpin.schema import fingerprint_to_base32, base32_to_fingerprint
from sslpin.contexts import DetectClientContextFactory

from twisted.internet.protocol import ClientFactory, Protocol
from twisted.internet import ssl, reactor, defer

class SimpleFactory(ClientFactory):
    protocol = Protocol

host = sys.argv[1]
port = 443

def get_certs(host):
    d = defer.Deferred()
    reactor.connectSSL(host, port, SimpleFactory(), DetectClientContextFactory(d))
    return d

def generate_url(host):
    d = get_certs(host)
    @d.addCallback
    def cb(certs):
        for depth, cert in certs.items():
            sha1_digest = cert.digest('sha1')
            base32_digest = fingerprint_to_base32(sha1_digest)
            url = "httpsv://%d=%s;%s" % (depth, base32_digest, host)
            sha1_digest = base32_to_fingerprint(base32_digest)
            print "--"
            print "Fingerprint: %s" % sha1_digest
            print "Url: %s" % url
        reactor.stop()

generate_url(host)

reactor.run()
